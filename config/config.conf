server {
    # listening port
    listen 9191;
    
    host 127.0.0.1;
    
    server_name localhost;
  
    root var/www/html/ ;
  
    index acceuil.html;
    access_log ../log/access.log;
    errors_log ../log/error.log;
  
    #Page can be redefined or not
    error_page 404 errors/404.html;
    error_page 403 errors/403.html; 
  
    limit_body_size 512;
    location / {
        # Autoriser uniquement GET et POST
        allowed_methods GET;
        #root /home/lagea/var/www/myapp; # répertoire où on cherche les ressources
        autoindex on; # pas de listing de répertoire
        index acceuil.html; # fichier par défaut s'il s'agit d'un répertoire
    }
    # ---------------------------------------------------------------------
    # 1) Limiter les méthodes HTTP acceptées à GET et POST
    # 3) Définir un répertoire racine pour la recherche des fichiers
    # 4) Désactiver l'auto-index (pas de listing de répertoire)
    # 5) Définir un fichier par défaut (index.html)
    location /myapp {
        # Autoriser uniquement GET et POST
        allowed_methods GET;
        #root /home/lagea/var/www/myapp; # répertoire où on cherche les ressources
        autoindex off; # pas de listing de répertoire
        index acceuil.html; # fichier par défaut s'il s'agit d'un répertoire
    }
    # ---------------------------------------------------------------------
    # 2) Redirection HTTP
    location /post_cgi {
        # Redirige toutes les requêtes /old-page vers /new-page
        allowed_methods GET POST;
        index post_cgi.html;
    }
    # ---------------------------------------------------------------------
    # Autre location redirigée
    location /post_text {
        # Ici, on pourrait simplement servir un index, 
        # ou renvoyer un fichier /var/www/new-page/index.html
        allowed_methods GET POST;
        index post_text.html;
    } 
    
    location /delete {
        # Ici, on pourrait simplement servir un index, 
        # ou renvoyer un fichier /var/www/new-page/index.html
        allowed_methods GET POST DELETE;
        index delete.html;
    }

    location /wikipedia_qr {
        # Ici, on pourrait simplement servir un index, 
        # ou renvoyer un fichier /var/www/new-page/index.html
        allowed_methods GET;
        index wikipedia_qr.html;
    }

    location /car_proposal {
        # Ici, on pourrait simplement servir un index, 
        # ou renvoyer un fichier /var/www/new-page/index.html
        allowed_methods GET POST;
        index car_proposal.html;
    }

    # ---------------------------------------------------------------------
    # 6) Exécuter du CGI (ex: .php) sur une extension spécifique
    # 7) Accepter GET et POST (limiter_except n'est pas obligatoire,
    #    par défaut Nginx autorise la plupart des méthodes).
    #
    # Ici on montre un bloc typique pour du PHP-FPM.
    # La syntaxe ".php$" signifie : "tous les fichiers terminant par .php"
    location .py$ {
        # On précise généralement un 'root' ou 'alias' selon les besoins.
        # Exemple :
        root var/www/cgi-bin/scripts;   
        include       cgi_param;
        # SCRIPT_FILENAME : indique au CGI le fichier py exact à exécuter
        cgi_param  CarPrice.py;
    }
    # ---------------------------------------------------------------------
    # 4) Activer le listing de répertoire (autoindex on)
    # 5) Définir un fichier par défaut
    # 8) Accueil des fichiers uploadés
    #
    # Supposons qu'on autorise l'upload dans /uploads/ 
    # et qu'on souhaite en voir le contenu si on accède à /uploads/ 
    #location /uploads/ {
        #allowed_methods UPLOAD;
        #root /home/lagea/var/www/misc; # /uploads pointe vers /var/www/misc/uploads/
        #autoindex on; # On autorise le listing de répertoire
        #index index.html; # Fichier par défaut si présent
        # Pour autoriser la réception de fichier, on gère cela côté application
        # (par ex. un script CGI/PHP accessible dans ce dossier). 
        # Si vous avez un script d'upload .php, Nginx le passera à FastCGI
        # comme dans le bloc ci-dessus.
    #}
}

server {
    # listening port
    listen 8080;
    
    host 127.0.0.1;
    
    server_name localhost_bis;
  
    root var/www/ ;
  
    index html/index.html;
  
    access_log log/access.log;
    errors_log log/error.log;
  
    #Page can be redefined or not
    error_page 404 html/errors/404.html;
    error_page 403 html/errors/403.html; 
  
    limit_body_size 512;
    
    # ---------------------------------------------------------------------
    # 1) Limiter les méthodes HTTP acceptées à GET et POST
    # 3) Définir un répertoire racine pour la recherche des fichiers
    # 4) Désactiver l'auto-index (pas de listing de répertoire)
    # 5) Définir un fichier par défaut (index.html)
    location /myapp {
        # Autoriser uniquement GET et POST
        allowed_methods GET POST;
        #root /home/lagea/var/www/myapp; # répertoire où on cherche les ressources
        autoindex off; # pas de listing de répertoire
        index html/acceuil.html; # fichier par défaut s'il s'agit d'un répertoire
    }
    # ---------------------------------------------------------------------
    # 2) Redirection HTTP
    location /old-page {
        # Redirige toutes les requêtes /old-page vers /new-page
        return 301 /new-page;
    }
    # ---------------------------------------------------------------------
    # Autre location redirigée
    location /new-page {
        # Ici, on pourrait simplement servir un index, 
        # ou renvoyer un fichier /var/www/new-page/index.html
        root var/www/html;
        index index.html;
    }
    # ---------------------------------------------------------------------
    # 6) Exécuter du CGI (ex: .php) sur une extension spécifique
    # 7) Accepter GET et POST (limiter_except n'est pas obligatoire,
    #    par défaut Nginx autorise la plupart des méthodes).
    #
    # Ici on montre un bloc typique pour du PHP-FPM.
    # La syntaxe ".php$" signifie : "tous les fichiers terminant par .php"
    location /CarPrice {
        # On précise généralement un 'root' ou 'alias' selon les besoins.
        # Exemple :
        root var/www/cgi-bin/scripts;   
        include       cgi_param;
        # SCRIPT_FILENAME : indique au CGI le fichier py exact à exécuter
        cgi_param  CarPrice.py;
    }

    location /Wiki {
        # On précise généralement un 'root' ou 'alias' selon les besoins.
        # Exemple :
        root var/www/cgi-bin/scripts/wikipedia;   
        include       cgi_param;
        # SCRIPT_FILENAME : indique au CGI le fichier py exact à exécuter
        cgi_param  main.go;
    }

    # ---------------------------------------------------------------------
    # 4) Activer le listing de répertoire (autoindex on)
    # 5) Définir un fichier par défaut
    # 8) Accueil des fichiers uploadés
    #
    # Supposons qu'on autorise l'upload dans /uploads/ 
    # et qu'on souhaite en voir le contenu si on accède à /uploads/ 
    #location /uploads/ {
        #allowed_methods UPLOAD;
        #root /home/lagea/var/www/misc; # /uploads pointe vers /var/www/misc/uploads/
        #autoindex on; # On autorise le listing de répertoire
        #index index.html; # Fichier par défaut si présent
        # Pour autoriser la réception de fichier, on gère cela côté application
        # (par ex. un script CGI/PHP accessible dans ce dossier). 
        # Si vous avez un script d'upload .php, Nginx le passera à FastCGI
        # comme dans le bloc ci-dessus.
    #}
}
