server {
    # listening port
    listen 8080 9000 9090;

    host 127.0.0.1;
    
    server_name example.com local.dev;

    root /home/lagea/var/www/example/;

    index index.html;

    access_log log/access.log;
    errors_log log/error.log;

    error_page 404 errors/404.html;
    error_page 403 errors/403.html;    

    limit_body_size 512;
    
    # ---------------------------------------------------------------------
    # 1) Limiter les méthodes HTTP acceptées à GET et POST
    # 3) Définir un répertoire racine pour la recherche des fichiers
    # 4) Désactiver l'auto-index (pas de listing de répertoire)
    # 5) Définir un fichier par défaut (index.html)
    location /myapp/ {
        # Autoriser uniquement GET et POST
        allowed_methods GET POST
        root /var/www/myapp;     # répertoire où on cherche les ressources
        autoindex off;           # pas de listing de répertoire
        index index.html;        # fichier par défaut s'il s'agit d'un répertoire
    }
    # ---------------------------------------------------------------------
    # 2) Redirection HTTP
    location /old-page {
        # Redirige toutes les requêtes /old-page vers /new-page
        return 301 /new-page;
    }
    # ---------------------------------------------------------------------
    # Autre location redirigée
    location /new-page {
        # Ici, on pourrait simplement servir un index, 
        # ou renvoyer un fichier /var/www/new-page/index.html
        root /var/www/new-page;
        index index.html;
    }
    # ---------------------------------------------------------------------
    # 6) Exécuter du CGI (ex: .php) sur une extension spécifique
    # 7) Accepter GET et POST (limiter_except n'est pas obligatoire,
    #    par défaut Nginx autorise la plupart des méthodes).
    #
    # Ici on montre un bloc typique pour du PHP-FPM.
    # La syntaxe ".php$" signifie : "tous les fichiers terminant par .php"
    location .php$ {
        # On précise généralement un 'root' ou 'alias' selon les besoins.
        # Exemple :
        root /var/www/php-app;   
        include       cgi_params;
        # SCRIPT_FILENAME : indique au CGI le fichier PHP exact à exécuter
        cgi_param  SCRIPT_FILENAME;
    }
    # ---------------------------------------------------------------------
    # 4) Activer le listing de répertoire (autoindex on)
    # 5) Définir un fichier par défaut
    # 8) Accueil des fichiers uploadés
    #
    # Supposons qu'on autorise l'upload dans /uploads/ 
    # et qu'on souhaite en voir le contenu si on accède à /uploads/ 
    location /uploads/ {
        allowed_methods UPLOAD;
        root /var/www/misc;    # /uploads pointe vers /var/www/misc/uploads/
        autoindex on;          # On autorise le listing de répertoire
        index index.html;      # Fichier par défaut si présent
        # Pour autoriser la réception de fichier, on gère cela côté application
        # (par ex. un script CGI/PHP accessible dans ce dossier). 
        # Si vous avez un script d'upload .php, Nginx le passera à FastCGI
        # comme dans le bloc ci-dessus.
    }
}